openapi: 3.0.0
info:
  title: 'catlife API'
  version: '0.1'
paths:
  /api/cats/:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: 1aa267fe99be0276c75a4bbe479ac733
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - birth
                - description
              properties:
                name:
                  description: 'cat name'
                  type: string
                  example: 'cat name'
                birth:
                  description: "cat's birthday"
                  type: string
                  example: '2022-01-23 11:22:33'
                description:
                  description: "cat's description"
                  type: string
                  example: 'something you want to take a memo'
                picture:
                  description: 'picture for the cat'
                  type: string
                  format: binary
              type: object
      responses:
        '200':
          description: 'create specified cat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatResource'
  '/api/cats/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: eaa20273bdc90d751ce892bd1b1a946c
      responses:
        '200':
          description: 'get specified cat'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatResource'
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: cf39966608b6cade9fdfac9999b6845d
      responses:
        '200':
          description: 'delete specified cat'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'delete succeeded or not', format: boolean, example: true }
                type: object
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: 4f0717f96c20eeb7d072bbb881f83525
      responses:
        '200':
          description: 'update specified cat'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'updating succeeded or not', format: boolean, example: true }
                type: object
  /login:
    post:
      summary: 認証の試行を処理
      operationId: 4638966d0d9cb59b7274313673ab5f89
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  description: email
                  type: string
                  example: user1@example.com
                password:
                  description: password
                  type: string
                  example: password
              type: object
      responses:
        '200':
          description: 'login message'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'response message', format: string, example: message }
                type: object
  /logout:
    post:
      operationId: bc7646632d757581b1408deec3ad2dd4
      responses:
        '200':
          description: 'logout message'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'response message', format: string, example: message }
                type: object
  /api/feeds/:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: 3a28439a59c222391c847013ce70d881
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - served_at
                - amount
                - memo
                - food_id
              properties:
                served_at:
                  description: 'served at'
                  type: string
                  example: '2022-01-23 11:22:33'
                amount:
                  description: amount
                  type: number
                  format: float
                  example: 50.11
                memo:
                  description: memo
                  type: string
                  example: 'something you want to take a memo'
                food_id:
                  description: 'food id'
                  type: number
                  example: 1
              type: object
      responses:
        '200':
          description: 'create specified feed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResource'
  '/api/feeds/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: 93d64c25c3d471aace28a9b999df098a
      responses:
        '200':
          description: 'get specified feed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResource'
        '400':
          description: 'not found'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'not found error', format: string, example: 'not found' }
                type: object
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: acd0827876b1e9d2827e83d5a1a6e04e
      responses:
        '200':
          description: 'delete specified feed'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'delete succeeded or not', format: boolean, example: true }
                type: object
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: 099650bb6dcfe621de7499a0b6a5a1e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                food_id:
                  description: 'food id'
                  type: number
                  example: 1
                served_at:
                  description: 'served at'
                  type: string
                  example: '2022-01-23 11:22:33'
                amount:
                  description: amount
                  type: number
                  example: 50.11
                memo:
                  description: memo
                  type: string
                  example: memo
              type: object
      responses:
        '200':
          description: 'update specified feed'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'updating succeeded or not', format: boolean, example: true }
                type: object
        '400':
          description: 'not found'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'not found error', format: string, example: 'not found' }
                type: object
  /api/food_catalogs/:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: f815b6148d19b0917336d078540a0e03
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  description: 'food name'
                  format: string
                  example: 'food name'
                maker:
                  description: 'maker name'
                  format: string
                  example: 'maker name'
                calorie:
                  description: calorie
                  format: float
                  example: 50.11
                memo:
                  description: memo
                  format: string
                  example: memo
                url:
                  description: url
                  format: string
                  example: 'https://example.com/product/1'
              type: object
      responses:
        '200':
          description: 'create specified food catalog'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCatalogResource'
  '/api/food_catalogs/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: 2486449407ae020be78235ad68320d0c
      responses:
        '200':
          description: 'get specified food catalog'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCatalogResource'
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: 54063387cadd4e9818660b9e94598f51
      responses:
        '200':
          description: 'delete specified food catalogs'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'delete succeeded or not', format: boolean, example: true }
                type: object
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: cab5209c251f7abc68c6fd16bc3f77d3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                name:
                  description: 'food name'
                  format: string
                  example: 'food name'
                maker:
                  description: 'maker name'
                  format: string
                  example: 'maker name'
                calorie:
                  description: calorie
                  format: float
                  example: 50.11
                memo:
                  description: memo
                  format: string
                  example: memo
                url:
                  description: url
                  format: string
                  example: 'https://example.com/product/1'
              type: object
      responses:
        '200':
          description: 'update specified food catalog'
          content:
            application/json:
              schema:
                properties:
                  status: { description: 'updating succeeded or not', format: boolean, example: true }
                type: object
  /api/me:
    get:
      operationId: 4b0f4f02e78d668f71a78b9c9f82dc03
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResource'
components:
  schemas:
    CatCollection: {  }
    CatResource:
      properties:
        id:
          title: ID
          description: ID
          format: int64
          example: 1
        name:
          title: name
          description: name
          format: string
          example: 'cat name'
        birth:
          title: birth
          description: 'birthday string'
          format: string
          example: '2022-01-23'
        description:
          title: description
          description: description
          format: string
          example: 'something you want to take a memo'
        picture:
          title: picture
          description: 'picture which is encoded with base64 format'
          format: string
          example: hogehoge
      type: object
    FeedResource:
      properties:
        id:
          title: ID
          description: ID
          format: int64
          example: 1
        served_at:
          title: served_at
          description: served_at
          format: string
          example: '2022-01-23 11:22:33'
        amount:
          title: amount
          description: amount
          format: float
          example: '50.11'
        memo:
          title: memo
          description: memo
          format: string
          example: 'something you want to take a memo'
      type: object
    FoodCatalogResource:
      properties:
        id:
          description: 'food id'
          format: number
          example: 1
        name:
          description: 'food name'
          format: string
          example: 'food name'
        maker:
          description: 'maker name'
          format: string
          example: 'maker name'
        calorie:
          description: calorie
          format: float
          example: 50.11
        memo:
          description: memo
          format: string
          example: memo
        url:
          description: url
          format: string
          example: 'https://example.com/product/1'
      type: object
    MeResource:
      properties:
        id:
          title: ID
          description: ID
          format: int64
          example: 1
        name:
          title: name
          description: name
          format: string
          example: 'my name'
        email:
          title: email
          description: email
          format: string
          example: user1@example.com
      type: object
  responses:
    '500':
      description: 'failed to save a file'
      content:
        application/json:
          schema:
            properties:
              message:
                description: 'error message'
                type: string
                example: 'Save file failed. Please try again later'
            type: object
    '400':
      description: 'failed to create'
      content:
        application/json:
          schema:
            properties:
              message:
                description: 'error message'
                format: string
                example: 'error message'
            type: object
